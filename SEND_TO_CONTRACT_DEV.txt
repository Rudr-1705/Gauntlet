# ‚úÖ WHAT YOU NEED FROM YOUR FRIEND

## Copy this and send to your contract developer:

---

**Hey! I need these 3 things to connect our platform to the smart contracts:**

### 1Ô∏è‚É£ Contract Addresses (after you deploy)
```
SponsorDAO Address: 0x___________________________________________
ValidatorDAO Address: 0x___________________________________________
```

### 2Ô∏è‚É£ RPC URL
```
Network Name: _______________ (Sepolia/Polygon/Mainnet)
RPC URL: https://___________________________________________
Chain ID: ___________
```

### 3Ô∏è‚É£ ABI Files (send me these 2 JSON files)
- [ ] SponsorDAO.json
- [ ] ValidatorDAO.json

### ‚ùå NO Private Key Needed!
**Our backend only listens to events - users sign their own transactions from MetaMask!**
- ‚úÖ More secure (no private key on server)
- ‚úÖ Users control their own wallets
- ‚úÖ `msg.sender` = user's address automatically

---

### ‚ö†Ô∏è Contract Requirements - Please Confirm:

Does **SponsorDAO** have these events?
- [ ] `ParticipantJoined(uint256 challengeId, address participant, uint256 stakeAmount, bytes32 answerHash)`
- [ ] `ChallengeCompleted(uint256 id, address winner, uint256 rewardAmount)`
- [ ] `ChallengeCreated(...)`

Does **SponsorDAO** have these functions?
- [ ] `stakeOnChallenge(uint256 challengeId, uint256 stakeAmount, bytes32 answerHash)`
- [ ] `releaseReward(uint256 challengeId, address participant)`

Does **ValidatorDAO** verify answers automatically?
- [ ] Yes, it compares answerHash with correct answer
- [ ] Yes, it triggers SponsorDAO.releaseReward() if correct

---

**Once I get these, the platform will be fully integrated in 5 minutes!** üöÄ

Thanks!
